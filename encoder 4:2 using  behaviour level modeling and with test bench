module encoder_bl(i,en,y);
    input  [3:0] i;      
    input        en;    
    output reg [1:0] y ;

always @(*) begin
    if (en == 0) begin
        y = 2'b00;      
    end 
    else begin
        case (i)
            4'b0001: y = 2'b00;  
            4'b0010:  y= 2'b01;  
            4'b0100:  y= 2'b10; 
            4'b1000:  y= 2'b11;  
            default: y  = 2'b00;  
        endcase
    end
end

endmodule

//testbench
module encoder_tb();
reg [3:0]i;
reg en;
wire [1:0]y;

encoder_bl dut(.i(i),.en(en),.y(y));

initial
begin


//i=4'b0001; 
en=0;
#10; en=1;i=4'b0001;
#10;i=4'b0010;
#10;i=4'b0100;
#10;i=4'b1000;
#10; $finish;



end



endmodule
