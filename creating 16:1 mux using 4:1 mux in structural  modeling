module mux16x1(i,en,s,y);
input [15:0]i;
input en;
input [3:0]s;
output y;
wire [3:0]w;
mux4x1 m1(i[3:0],en,s[1:0],w[0]);
mux4x1 m2(i[7:4],en,s[1:0],w[1]);
mux4x1 m3(i[11:8],en,s[1:0],w[2]);
mux4x1 m4(i[15:12],en,s[1:0],w[3]);
mux4x1 m5(w[3:0],en,s[3:2],y);
endmodule

module mux4x1(i,en,s,y);
input [3:0]i;
input [1:0]s;
input en;
output reg [3:0]y;
always@(*)
 begin
 case(s) 
 2'b00:y =i[3];
 2'b01:y =i[2];
 2'b10:y =i[1];
 2'b11:y =i[0];
endcase
end
endmodule
//testbench 
    module mux16x1_tb();
reg [15:0]i;
reg [3:0]s;
reg en;
wire y;
mux16x1 dut1(i,en,s,y);
initial begin 
  en=0;
  i=16'b1010101010101010;

  s=4'b0000; #10;
  s=4'b0010; #10;

  en=1; s=4'b0000; #10;
  s=4'b0010; #10;
  s=4'b0100; #10;
  s=4'b1000; #10;

  $finish;
end
endmodule
